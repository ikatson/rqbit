name: test-gha

on:
  push:
    branches:
      - test-docker-gha

jobs:
  test-gha:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder1

      - name: Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            usr-local-cargo-git-db
            usr-local-cargo-registry-cache
            usr-local-cargo-registry-index
            src-target
          key: cache-${{ hashFiles('openssl-cross-docker-build/Dockerfile') }}

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "usr-local-cargo-git-db": "/usr/local/cargo/git/db",
              "usr-local-cargo-registry-cache": "/usr/local/cargo/registry/cache",
              "usr-local-cargo-registry-index": "/usr/local/cargo/registry/index",
              "src-target": "/src/target"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - uses: crazy-max/ghaction-github-runtime@v3
      - run: cd openssl-cross-docker-build &&
          mkdir -p output/ &&
          docker build --progress=plain
          --builder ${{ steps.builder1.outputs.name }}
          --platform linux/arm/v7
          --output=type=local,dest=output/
          -t testf .

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: openssl-cross-docker-build
      #     file: openssl-cross-docker-build/Dockerfile
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
